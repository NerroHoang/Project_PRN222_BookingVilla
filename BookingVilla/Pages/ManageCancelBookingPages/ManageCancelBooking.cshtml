@page
@model ManageCancelBookingModel
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Manage Cancel Booking</title>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto|Varela+Round">
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    <style>
        select {
            width: 112px
        }

        td a {
            cursor: pointer;
        }

        btn btn-default {
            color: orange;
        }

        body {
            color: #566787;
            background: #f5f5f5;
            font-family: 'Varela Round', sans-serif;
            font-size: 13px;
        }

        /*---------------------
                      Breadcrumb
                    -----------------------*/

        .breadcrumb-option {
            padding-top: 35px;
        }

        .breadcrumb__links a {
            font-size: 15px;
            font-weight: 500;
            color: #111111;
            margin-right: 18px;
            display: inline-block;
            position: relative;
        }

            .breadcrumb__links a:after {
                position: absolute;
                right: -14px;
                top: 0;
                content: "";
                font-family: "FontAwesome";
            }

            .breadcrumb__links a i {
                margin-right: 5px;
            }

        .breadcrumb__links span {
            font-size: 15px;
            font-weight: 500;
            color: #888888;
            display: inline-block;
        }


        .table-wrapper {
            background: #fff;
            padding: 20px 25px;
            margin: 30px 0;
            border-radius: 3px;
            box-shadow: 0 1px 1px rgba(0,0,0,.05);
        }

        .table-title {
            padding-bottom: 15px;
            background: #353535;
            color: #fff;
            padding: 16px 30px;
            margin: -20px -25px 10px;
            border-radius: 3px 3px 0 0;
        }

            .table-title h2 {
                margin: 5px 0 0;
                font-size: 24px;
            }

            .table-title .btn-group {
                float: right;
            }

            .table-title .btn {
                color: #fff;
                float: right;
                font-size: 13px;
                border: none;
                min-width: 50px;
                border-radius: 2px;
                border: none;
                outline: none !important;
                margin-left: 10px;
            }

                .table-title .btn i {
                    float: left;
                    font-size: 21px;
                    margin-right: 5px;
                }

                .table-title .btn span {
                    float: left;
                    margin-top: 2px;
                }

        table.table tr th, table.table tr td {
            border-color: #e9e9e9;
            padding: 12px 15px;
            vertical-align: middle;
        }

            table.table tr th:first-child {
                width: 20px;
            }

            table.table tr th:last-child {
                width: 100px;
            }

        table.table-striped tbody tr:nth-of-type(odd) {
            background-color: #fcfcfc;
        }

        table.table-striped.table-hover tbody tr:hover {
            background: #f5f5f5;
        }

        table.table th i {
            font-size: 13px;
            margin: 0 5px;
            cursor: pointer;
        }

        table.table td:last-child i {
            opacity: 0.9;
            font-size: 22px;
            margin: 0 5px;
        }

        table.table td a {
            font-weight: bold;
            color: #566787;
            display: inline-block;
            text-decoration: none;
            outline: none !important;
        }

            table.table td a:hover {
                color: #2196F3;
            }

            table.table td a.edit {
                color: #FFC107;
            }

            table.table td a.delete {
                color: #F44336;
            }

        table.table td i {
            font-size: 19px;
        }

        table.table .avatar {
            border-radius: 50%;
            vertical-align: middle;
            margin-right: 10px;
        }

        .pagination {
            float: right;
            margin: 0 0 5px;
        }

            .pagination li a {
                border: none;
                font-size: 13px;
                min-width: 30px;
                min-height: 30px;
                color: #999;
                margin: 0 2px;
                line-height: 30px;
                border-radius: 2px !important;
                text-align: center;
                padding: 0 6px;
            }

                .pagination li a:hover {
                    color: #666;
                }

            .pagination li.active a, .pagination li.active a.page-link {
                background: #03A9F4;
            }

                .pagination li.active a:hover {
                    background: #0397d6;
                }

            .pagination li.disabled i {
                color: #ccc;
            }

            .pagination li i {
                font-size: 16px;
                padding-top: 6px
            }

        .hint-text {
            float: left;
            margin-top: 10px;
            font-size: 13px;
        }
        /* Custom checkbox */
        .custom-checkbox {
            position: relative;
        }

            .custom-checkbox input[type="checkbox"] {
                opacity: 0;
                position: absolute;
                margin: 5px 0 0 3px;
                z-index: 9;
            }

            .custom-checkbox label:before {
                width: 18px;
                height: 18px;
            }

            .custom-checkbox label:before {
                content: '';
                margin-right: 10px;
                display: inline-block;
                vertical-align: text-top;
                background: white;
                border: 1px solid #bbb;
                border-radius: 2px;
                box-sizing: border-box;
                z-index: 2;
            }

            .custom-checkbox input[type="checkbox"]:checked + label:after {
                content: '';
                position: absolute;
                left: 6px;
                top: 3px;
                width: 6px;
                height: 11px;
                border: solid #000;
                border-width: 0 3px 3px 0;
                transform: inherit;
                z-index: 3;
                transform: rotateZ(45deg);
            }

            .custom-checkbox input[type="checkbox"]:checked + label:before {
                border-color: #03A9F4;
                background: #03A9F4;
            }

            .custom-checkbox input[type="checkbox"]:checked + label:after {
                border-color: #fff;
            }

            .custom-checkbox input[type="checkbox"]:disabled + label:before {
                color: #b8b8b8;
                cursor: auto;
                box-shadow: none;
                background: #ddd;
            }
                    */ .modal .modal-header, .modal .modal-body, .modal .modal-footer {
            padding: 8px 30px;
        }
        .modal .modal-footer {
            background: #ecf0f1;
            border-radius: 0 0 3px 3px;
        }
        .form-group label {
            margin-right: 0.5rem; /* Khoảng cách giữa label và input */
        }

        #detailBooking input {
            width: -webkit-fill-available;
        }
    </style>
</head>
<body>
    <!-- Breadcrumb Begin -->
    <div class="breadcrumb-option">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="breadcrumb__links">
                        <a asp-page="/Index"><i class="fa fa-home"></i> Home</a>
                        <span>Manage Cancel Booking</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Breadcrumb End -->

    <div class="container">
        <div class="table-wrapper">
            <div class="table-title">
                <div class="row">
                    <div class="col-sm-8">
                        <h2><b>Manage Cancel Booking</b></h2>
                    </div>
                    <div class="col-sm-4">
                        <form method="post">
                            <input style="color: black" type="submit" value="Search">
                            <input style="color: black" type="search" name="Search" value="@Model.Search">
                            <select style="color: black" name="list" onchange="orderBy(this)">
                                <option value="pending" selected="@(Model.Choice == "pending")">Pending</option>
                                <option value="approved" selected="@(Model.Choice == "approved")">Approved</option>
                                <option value="rejected" selected="@(Model.Choice == "rejected")">Rejected</option>
                                <option value="all" selected="@(Model.Choice == "all")">All</option>
                            </select>
                        </form>
                    </div>
                </div>
            </div>

            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th>ID Booking</th>
                        <th>Name</th>
                        <th>Phone</th>
                        <th>Status</th>
                        <th>Request Date</th>
                        <th>Update Status</th>
                        <th>Details</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var ccbk in Model.CancelBookings)
                    {
                        <tr>
                            <td>@ccbk.IdBookingOnline</td>
                            <td>@ccbk.Name</td>
                            <td>@ccbk.Phone</td>
                            <td>
                                @switch (ccbk.Status)
                                {
                                    case "Rejected":
                                        <span style="color: red;">@ccbk.Status</span>
                                        break;
                                    case "Pending":
                                        <span style="color: #FFCC00;">@ccbk.Status</span>
                                        break;
                                    case "Approved":
                                        <span style="color: green;">@ccbk.Status</span>
                                        break;
                                    default:
                                        <span>@ccbk.Status</span>
                                        break;
                                }
                            </td>
                            <td>@ccbk.RequestDate.GetValueOrDefault().ToString("dd-MM-yyyy")</td>
                            <td>
                                <a href="#" class="approve-button" data-idbooking="@ccbk.IdBookingOnline" data-idcancelbooking="@ccbk.Id">Approve</a> |
                                <a href="#" class="reject-button" data-idbooking="@ccbk.IdBookingOnline" data-idcancelbooking="@ccbk.Id">Reject</a>
                            </td>
                            <td>
                                <a href="#" class="detail-button" data-idbooking="@ccbk.IdBookingOnline" data-idcustomer="@ccbk.IdCustomer" data-toggle="modal">Detail</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <!-- Pagination -->
            <div class="clearfix">
                <div class="hint-text">Showing <b>5</b> out of <b>@Model.NumberTotal</b> entries</div>
                <ul class="pagination">
                    @if (Model.Index > 1)
                    {
                        <li class="page-item"><a asp-page="ManageCancelBooking" asp-route-index="@(Model.Index - 1)" asp-route-choice="@Model.Choice">Previous</a></li>
                    }

                    @for (int i = 1; i <= Model.NumberPage; i++)
                    {
                        <li class="page-item @(Model.Index == i ? "active" : "")">
                            <a asp-page="ManageCancelBooking" asp-route-index="@i" asp-route-choice="@Model.Choice">@i</a>
                        </li>
                    }

                    @if (Model.Index < Model.NumberPage)
                    {
                        <li class="page-item"><a asp-page="ManageCancelBooking" asp-route-index="@(Model.Index + 1)" asp-route-choice="@Model.Choice">Next</a></li>
                    }
                </ul>
            </div>
        </div>
    </div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
    <script>
            const connection = new signalR.HubConnectionBuilder()
            .withUrl("/newsHub")
            .configureLogging(signalR.LogLevel.Information)
            .build();

        connection.start().catch(err => console.error(err.toString()));

        connection.on("ReceiveNewCancelBooking", function (message) {
            alert("New update: " + message);
            location.reload(); // Tải lại trang nếu cần
        });
        const orderBy = (item) => {
            window.location.href = "/ManageCancelBookingPages/ManageCancelBooking?choice=" + encodeURIComponent(item.value);
        };
        function confirmApproveCancelBooking(idcanclebooking, idbooking) {
            Swal.fire({
                title: 'Are You Sure You Want To Approve This Request?',
                text: "",
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Approve',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Chuyển hướng đến servlet khác kèm theo idcanclebooking
                    window.location = "/ManageCancelBookingPages/ManageCancelBooking?handler=ApproveCancelBooking&idcancelbooking=" + idcanclebooking;

                }
            });
        }
        function confirmRejectCancelBooking(idcanclebooking, idbooking) {
            Swal.fire({
                title: 'Are You Sure You Want To Reject This Request?',
                text: "",
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Reject',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Chuyển hướng đến servlet khác kèm theo idcanclebooking
                    window.location = "/ManageCancelBookingPages/ManageCancelBooking?handler=RejectCancelBooking&idcancelbooking=" + idcanclebooking;

                }
            });
        }
        document.addEventListener('DOMContentLoaded', () => {
            const approvecanclebooking = document.querySelectorAll('.approve-button');
            const rejectcanclebooking = document.querySelectorAll('.reject-button');
            const detailButtons = document.querySelectorAll('.detail-button');
            approvecanclebooking.forEach(approvelink => {
                approvelink.addEventListener('click', (event) => {
                    event.preventDefault(); // Ngăn chặn hành vi mặc định của thẻ <a>
                    const idcancelbooking = approvelink.getAttribute('data-idcancelbooking');
                    const idbooking = approvelink.getAttribute('data-idbooking');
                    confirmApproveCancelBooking(idcancelbooking, idbooking);
                });
            });
            rejectcanclebooking.forEach(rejectlink => {
                rejectlink.addEventListener('click', (event) => {
                    event.preventDefault(); // Ngăn chặn hành vi mặc định của thẻ <a>
                    const idcancelbooking = rejectlink.getAttribute('data-idcancelbooking');
                    const idbooking = rejectlink.getAttribute('data-idbooking');
                    confirmRejectCancelBooking(idcancelbooking, idbooking);
                });
            });
            detailButtons.forEach(detailButton => {
                detailButton.addEventListener('click', (event) => {
                    const idbooking = detailButton.getAttribute('data-idbooking');
                    const idcustomer = detailButton.getAttribute('data-idcustomer');

                    // Xây dựng URL bằng cách nối chuỗi
                    var url = "DetailCancelBookingServlet?idbooking=" + encodeURIComponent(idbooking) + "&idcustomer=" + encodeURIComponent(idcustomer);

                    fetch(url)
                            .then(response => response.json())
                            .then(data => {
                                document.getElementById('nameCustomer').value = data.nameCustomer;
                                document.getElementById('numofPeople').value = data.numOfPeople;
                                document.getElementById('checkinDate').value = data.checkinDate;
                                document.getElementById('checkoutDate').value = data.checkoutDate;
                                document.getElementById('nameVilla').value = data.nameVilla;
                                document.getElementById('total').value = Number(data.total).toLocaleString('vi-VN') + ' VNĐ';

                                // Xóa các dịch vụ hiện có trong modal
                                const servicesContainer = document.getElementById('servicesContainer');
                                servicesContainer.innerHTML = '';

                                // Thêm các dịch vụ từ danh sách
                                data.servicesincluded.forEach((service, index) => {
                                    const formGroup = document.createElement('div');
                                    formGroup.className = 'form-group';

                                    const serviceLabel = document.createElement('label');
                                    serviceLabel.textContent = `Service         `;

                                    const serviceInput = document.createElement('input');
                                    serviceInput.type = 'text';
                                    serviceInput.readOnly = true;
                                    serviceInput.className = 'input';
                                    serviceInput.value = service;

                                    formGroup.appendChild(serviceLabel);
                                    formGroup.appendChild(serviceInput);
                                    servicesContainer.appendChild(formGroup);
                                });

                                // Hiển thị modal
                                $('#detailBooking').modal('show');
                            })
                            .catch(error => console.error('Error:', error));
                });
            });
        });

    </script>
</body>
</html>

